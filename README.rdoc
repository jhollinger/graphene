= Graphene

Graphene is a library for calculating subtotals, percentages, tables and graphs from collections of Ruby objects.
It's most useful feature is probably the Gruff helpers. True, some types of Gruff charts are pretty simple to begin 
with, but others can require tedious boilerplate code to calculate percentages, well-spaced labels, and more.
Graphene hides all of that, accepting an array of objects and transforming them into a graph.

Read the full documentation at http://jordanhollinger.com/docs/graphene/.

Nobody likes you, Ruby 1.8. Now go away.

== Installation

    $ [sudo] gem install graphene
    # Or just add "graphene" to your Gemfile

Gruff is required only by Graphene's graphing component. Because of this, and because Gruff's dependencies can be difficult to install, 
you will need to install Gruff manually. If you do not/cannot, Graphene's other components will continue to function.

    # On Debian/Ubuntu
    $ sudo apt-get install librmagick-ruby libmagickcore-dev libmagickwand-dev 

    $ [sudo] gem install rmagick gruff
    # Or just add "rmagick" and "gruff" to your Gemfile

See http://nubyonrails.com/pages/gruff/ for more on Gruff.

== Percentages

    # An array of objects which respond to methods like :browser, :platform, :date
    logs = SomeLogParser.parse('/var/log/nginx/access.log.*')

    percentages = Graphene.percentages(logs, :browser)

    puts percentages.to_a
    => [["Firefox", 40.0], ["Chrome", 35.0], ["Internet Explorer", 25.0]]

    percentages.each do |browser, count|
      puts "There were #{count} hits from #{browser}"
    end

    # You can also calculate by multiple criteria, and can use lambdas instead of symbols
    percentages = Graphene.percentages(logs, ->(l) { l.browser }, :platform)

    puts percentages.to_a
    => [["Chrome", "OS X", 40], ["Internet Explorer", "Windows", 25], ["Firefox", "Windows", 25], ["Firefox", "GNU/Linux", 8], ["Chrome", "GNU/Linux", 2]]

See Graphene.percentages for more info.

== Subtotals

    Same as percentages above, except that subtotals are returned instead.

See Graphene.subtotals for more info.

== Tablizer

Integration with the tablizer gem provides quick ASCII tables.

    puts percentages.tablize
    => +-----------------+------------+-------+
       |     Browser     |  Platform  |Percent|
       +-----------------+------------+-------+
       |Firefox          |Windows     |50.0   |
       |Internet Explorer|Windows     |20.0   |
       |Safari           |OS X        |20.0   |
       |Firefox          |GNU/Linux   |10.0   |
       +-----------------+------------+-------+

== Graphs

Extends Graphene by adding several helpers for generating graphs. Requires that the Ruby "gruff" gem be installed.

    # An array of objects which respond to methods like :browser, :platform, :date
    logs = SomeLogParser.parse('/var/log/nginx/access.log.*')

    # A pie chart of Firefox version shares
    ff = logs.select { |e| e.browser == 'Firefox' }
    Graphene.percentages(ff, :browser).pie_chart('/path/to/ff-version-share.png', 'Firefox Version Share')

    # A line graph of daily browser numbers over time, tricked out with lots of options
    Graphene.subtotals(logs, :browser).over(:date).line_graph('/path/to/browser-share.png') do |chart, labeler|
      chart.title = 'Browser Share'
      chart.font = '/path/to/awesome/font.ttf'
      chart.theme = {
        :colors => %w(orange purple green white red),
        :marker_color => 'blue',
        :background_colors => %w(black grey)
      }

      # Only show every 7th label, and make dates pretty
      labeler.call(7) do |date|
        date.strftime('%b %e')
      end
    end

See Graphene::Charts and Graphene::Graphs for more types and examples. See http://gruff.rubyforge.org/classes/Gruff/Base.html for more Gruff options.

== License
Copyright 2012 Jordan Hollinger

Licensed under the Apache License
